#!/bin/bash

function html_2_img {
    local img="$(sed -n -e 's/.*<img src="\(.*\)" alt.*/\1/p' "$1")"
    echo "${img#*/}" # strip the prefix '../'
}

function rename_img {
    local img="$1"
    local ext="${img##*.}"
    local dir="$(dirname "$img")"
    local new="$dir/$2.$ext"
    mv -v "$img" "$new"
}

function normalize {
    if [[ $1 == cover* ]]; then
        echo "000-$1"
    else
        printf '%03s' "$1"
    fi
}

ebook="$1"
if [[ -z "$ebook" ]]; then
    >&2 echo "usage: ${0##*/} <ebook-file> [target-dir]"
    exit 1
fi

target="$2"
if [[ -z "$target" ]]; then
    target="${ebook%.*}"
fi
if [[ -z "$target" ]]; then
    >&2 echo "error: empty '$target "
    exit 1
fi
if [[ -e "$target" ]]; then
    >&2 echo "error: file '$target' exists"
    exit 1
fi

ebookext="${ebook##*.}"
if [[ "$ebookext" != "epub" ]]; then
    >&2 echo "error: file '$ebook' is not epub format"
    exit 1
fi

# unpack ebook
tmp="$target.$RANDOM"
7z x "$ebook" -o"$tmp"

# rename
(cd "$tmp" &&
    sed -n -e 's/.*<item id="Page_\(.*\)"  *href="\(.*\)" media.*/\1 \2/p' vol.opf |
    while IFS= read -r line; do
        page="${line% *}"
        html="${line#* }"
        img="$(html_2_img "$html")"
        page="$(normalize "$page")"
        rename_img "$img" "$page"
    done
)

# clean tmp
mv "$tmp/image" "$target"
rm -rf "$tmp"
